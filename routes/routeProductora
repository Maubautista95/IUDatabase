const express = require('express');
const router = express.Router()
const modeloProductora = require('../models/productora')

//Post Method

router.post('/post', async (req, res) => {
    const data = new modeloProductora({
        nombre: req.body.nombre,
        slogan: req.body.slogan,
        descripcion: req.body.descripcion
    })

    try {
        const dataToSave = await data.save();
        res.status(200).json(dataToSave)
    }
    catch (error) {
        res.status(400).json({message: error.message})
    }
})


//Get all Method


router.get('/getAll', async (req, res) => {
    try {
        const data = await modeloProductora.find(); // Corregido el nombre del modelo
        res.json(data);
    } catch (error) {
        res.status(500).json({ message: error.message })
    }
})

//Get by ID Method

router.get('/getOne/:id', async (req, res) => {
    try{
        const data = await modeloProductora.findById(req.params.id);
        res.json(data)
    }
    catch(error){
        res.status(500).json({message: error.message})
    }
})

//Update by ID Method
router.patch('/update/:id', async (req, res) => {
    try {
        const id = req.params.id;
        const updatedData = req.body;
        const options = { new: true };

        const result = await modeloProductora.findByIdAndUpdate(
            id, updatedData, options
        )

        res.send(result)
    }
    catch (error) {
        res.status(400).json({ message: error.message })
    }
})

//Delete by ID Method
router.delete('/delete/:id', async (req, res) => {
    try {
        const id = req.params.id;
        const data = await modeloProductora.findByIdAndDelete(id)
        res.send(`Document with ${data.name} has been deleted..`)
    }
    catch (error) {
        res.status(400).json({ message: error.message })
    }
})


module.exports = router;